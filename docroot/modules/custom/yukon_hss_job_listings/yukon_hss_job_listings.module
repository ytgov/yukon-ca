<?php

declare(strict_types=1);

use GuzzleHttp\Client;
use GuzzleHttp\Exception\GuzzleException;

/**
 * Implements hook_cron().
 *
 * Populate the HSS job listings field(s) from their remote sources. API calls are
 * logged along with their status.
 */
function yukon_hss_job_listings_cron(): void {
  // Populate the HRSmart job listings field.
  $config = Drupal::config('yukon_hss_job_listings.settings');

  foreach (['hrsmart', 'ukg_pro'] as $source) {
    if ($source === 'hrsmart') {
      // Glue the HRSmart URI pieces together.
      $apiUri = $config->get('hrsmart_xml_api_uri') . $config->get('hrsmart_xml_api_key');
      $apiAccept = 'text/xml';
    } else {
      // Insert the UKG Pro integration ID into the URI.
      $apiUri = str_replace('INTEGRATION_ID', $config->get('ukg_pro_integration_id'), $config->get('ukg_pro_api_uri'));
      $apiAccept = 'text/json';
    }

    try {
      $client = new Client();
      $response = $client->get($apiUri, ['headers' => ['Accept' => $apiAccept]]);
      $payload = (string)$response->getBody();
    } catch (GuzzleException $e) {
      Drupal::logger('yukon_hss_job_listings')
        ->error('HSS job listings API request failed: @message', ['@message' => $e->getMessage()]);
      return;
    }

    Drupal::logger('yukon_hss_job_listings')
      ->info('HSS job listings API request succeeded.');

    $nodeId = $config->get($source . '_content_node_id');
    $paragraphsFieldName = $config->get($source . '_paragraphs_field_name');
    $paragraphBundleName = $config->get($source . '_paragraph_bundle_name');
    $dataFieldName = $config->get($source . '_data_field_name');

    try {
      $node_en = Drupal::entityTypeManager()
        ->getStorage('node')
        ->load($nodeId);

      $node_fr = $node_en->getTranslation('fr');
    } catch (Exception $e) {
      Drupal::logger('yukon_hss_job_listings')
        ->error('Failed to locate content node for HSS job listings: @message', ['@message' => $e->getMessage()]);
      return;
    }

    // Hunt down and set the value of the job listings data field within the paragraph
    // type within the field of paragraphs within the content item for both English and
    // French. If any step fails, the field will retain its previous contents.
    foreach ([$node_en, $node_fr] as $translated_node) {
      if ($translated_node && $translated_node->hasField($paragraphsFieldName)) {
        $fieldParagraphs = $translated_node->get($paragraphsFieldName)->referencedEntities();

        if (!empty($fieldParagraphs)) {
          foreach ($fieldParagraphs as $fieldParagraph) {
            if ($fieldParagraph->bundle() === $paragraphBundleName) {
              $fieldParagraph->set($dataFieldName, $payload);
              $fieldParagraph->save();
            }
          }
        }
      }
    }
  }
}
