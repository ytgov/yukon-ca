{#
/**
 * @file
 * Theme override to display a node.
 *
 * Available variables:
 * - node: The node entity with limited access to object properties and methods.
 *   Only method names starting with "get", "has", or "is" and a few common
 *   methods such as "id", "label", and "bundle" are available. For example:
 *   - node.getCreatedTime() will return the node creation timestamp.
 *   - node.hasField('field_example') returns TRUE if the node bundle includes
 *     field_example. (This does not indicate the presence of a value in this
 *     field.)
 *   - node.isPublished() will return whether the node is published or not.
 *   Calling other methods, such as node.delete(), will result in an exception.
 *   See \Drupal\node\Entity\Node for a full list of public properties and
 *   methods for the node object.
 * - label: (optional) The title of the node.
 * - content: All node items. Use {{ content }} to print them all,
 *   or print a subset such as {{ content.field_example }}. Use
 *   {{ content|without('field_example') }} to temporarily suppress the printing
 *   of a given child element.
 * - author_picture: The node author user entity, rendered using the "compact"
 *   view mode.
 * - metadata: Metadata for this node.
 * - date: (optional) Themed creation date field.
 * - author_name: (optional) Themed author name field.
 * - url: Direct URL of the current node.
 * - display_submitted: Whether submission information should be displayed.
 * - attributes: HTML attributes for the containing element.
 *   The attributes.class element may contain one or more of the following
 *   classes:
 *   - node: The current template type (also known as a "theming hook").
 *   - node--type-[type]: The current node type. For example, if the node is an
 *     "Article" it would result in "node--type-article". Note that the machine
 *     name will often be in a short form of the human readable label.
 *   - node--view-mode-[view_mode]: The View Mode of the node; for example, a
 *     teaser would result in: "node--view-mode-teaser", and
 *     full: "node--view-mode-full".
 *   The following are controlled through the node publishing options.
 *   - node--promoted: Appears on nodes promoted to the front page.
 *   - node--sticky: Appears on nodes ordered above other non-sticky nodes in
 *     teaser listings.
 *   - node--unpublished: Appears on unpublished nodes visible only to site
 *     admins.
 * - title_attributes: Same as attributes, except applied to the main title
 *   tag that appears in the template.
 * - content_attributes: Same as attributes, except applied to the main
 *   content tag that appears in the template.
 * - author_attributes: Same as attributes, except applied to the author of
 *   the node tag that appears in the template.
 * - title_prefix: Additional output populated by modules, intended to be
 *   displayed in front of the main title tag that appears in the template.
 * - title_suffix: Additional output populated by modules, intended to be
 *   displayed after the main title tag that appears in the template.
 * - view_mode: View mode; for example, "teaser" or "full".
 * - teaser: Flag for the teaser state. Will be true if view_mode is 'teaser'.
 * - page: Flag for the full page state. Will be true if view_mode is 'full'.
 * - readmore: Flag for more state. Will be true if the teaser content of the
 *   node cannot hold the main body content.
 * - logged_in: Flag for authenticated user status. Will be true when the
 *   current user is a logged-in member.
 * - is_admin: Flag for admin user status. Will be true when the current user
 *   is an administrator.
 *
 * @see template_preprocess_node()
 *
 */
#}
{%
  set classes = [
    'node',
    'node--type-' ~ node.bundle|clean_class,
    node.isPromoted() ? 'node--promoted',
    node.isSticky() ? 'node--sticky',
    not node.isPublished() ? 'node--unpublished',
    view_mode ? 'node--view-mode-' ~ view_mode|clean_class,
  ]
%}
{{ attach_library('classy/node') }}
<article{{ attributes.addClass(classes) }}>

	{{ title_prefix }}
		{% if label and not page %}
			<h2{{ title_attributes }}>
				<a href="{{ url }}" rel="bookmark">{{ label }}</a>
			</h2>
		{% endif %}
	{{ title_suffix }}

	{% if display_submitted %}
		<footer class="node__meta">
			{{ author_picture }}
			<div{{ author_attributes.addClass('node__submitted') }}>
				{% trans %}Submitted by {{ author_name }} on {{ date }}{% endtrans %}
				{{ metadata }}
			</div>
		</footer>
	{% endif %}

	<div class="hero-img" style="background-image: url('{{ file_url(node.field_hero_image.entity.field_media_image_1.entity.uri.value) }}')">
		
	</div>

	<div class="flex justify-center">
		<div class="w-10/12">
			<div class="campaign-intro-text mb-5 mt-[-180px]">
				<div class="border-b-8 border-blue-400 shadow-lg px-20 pt-8 pb-10 bg-white rounded" style="border-bottom: 8px solid {{ node.field_highlight_color.color|raw }}">
					<div class="campaign-text-only-wrapper">
						<h1 class="mb-8 mt-0 text-4xl font-medium text-gray-450">{{ label }}</h1>
						{{ node.field_intro_text_block.value|raw }}
					</div>
				</div>
			</div>
		</div>
	</div>
    
    {% if node.field_navigation_jump_point.value is not empty %}
		<div class="flex justify-center border-b-1 border-gray-90">
			<div class="w-10/12">
				<div class="campaign-nav mb-20">
					<div class="flex flex-col md:flex-row gap-7">
						{{ content.field_navigation_jump_point }}
					</div>
				</div>
			</div>
		</div>
    {% endif %}
	
	{{ content.field_paragraphs }}
	
	<div class="flex justify-center">
		<div class="w-10/12">
			<div class="campaign-social-media mb-5">
				<div class="border-b-8 border-blue-400 shadow-lg px-20 pt-8 pb-10 bg-white rounded" style="border-bottom: 8px solid {{ node.field_highlight_color.color|raw }}">
					<div class="campaign-text-only-wrapper">
						{% if node.field_add_social_media_channels.value == "1" and node.field_social_network is not empty %}
							<h2 class="mb-3 mt-5 font-medium">{{ 'Follow the campaign on'|t }}</h2>
							<div class="social-links border-b-1 border-gray-90 pb-6">
								{{ content.field_social_network }}
							</div>
						{% endif %}
						
						<div class="feedback-form">
							<h2 class="pt-8 mt-0 mb-3">{{ 'Give us your feedback'|t }}</h2>
							{{ drupal_entity('webform', 'page_feedback') }}
						</div>
					</div>
				</div>
			</div>
		</div>
	</div>

	{% if node.field_logos.value is not empty %}
		<div class="campaign-logos mt-24 mb-5">
			<div class="flex justify-center">
				{{ content.field_logos }}
			</div>
		</div>
	{% endif %}

</article>